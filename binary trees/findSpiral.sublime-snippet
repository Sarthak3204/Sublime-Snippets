<snippet>
	<content><![CDATA[
vector<int> findSpiral(Node *root) {
    vector<int> ans;
    if (root == NULL) return ans;

    queue<Node*> q;
    q.push(root);
    ans.push_back(root->data);

    int lev = 1;
    while (!q.empty()) {
        int n = q.size();
        vector<Node*> v;
        for (int i = 0; i < n; i++) {
            Node *node = q.front();
            Node *l = node->left, *r = node->right;
            q.pop();

            if (lev) {
                if (l) v.push_back(l);
                if (r) v.push_back(r);
            }
            else {
                if (r) v.push_back(r);
                if (l) v.push_back(l);
            }
        }

        for (auto &x : v) ans.push_back(x->data);
        reverse(v.begin(), v.end());
        for (auto &x : v) q.push(x);

        lev ^= 1;
    }

    return ans;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>binary_trees_findSpiral</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
