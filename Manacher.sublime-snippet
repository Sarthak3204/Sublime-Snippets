<snippet>
	<content><![CDATA[
class Manacher {
public:
    int n;
    string &a, b;
    vector<int> p;

    Manacher(string &s) : a(s) {
        for (auto &x : s) {
            b += string("#") + x;
        } b += string("#");

        n = (int)b.size();
        p.assign(n, 1);

        int l = 1, r = 1;
        for (int i = 1; i < n; i++) {
            p[i] = max(0ll, min(r - i, p[l + r - i]));
            while (i + p[i] < n and i - p[i] >= 0 and b[i - p[i]] == b[i + p[i]]) p[i]++;
            if (i + p[i] > r) {
                l = i - p[i];
                r = i + p[i];
            }
        }
    }

    int Longest(int center, int odd) {
        int index = 2 * center + 1 + (!odd);
        return p[index] - 1;
    }

    string getLongest() {
        int index = max_element(all(p)) - p.begin();
        int len = p[index] - 1;

        if (b[index] == '#') index = (index - 2) / 2 - len / 2 + 1;
        else index = (index - 1) / 2 - len / 2;

        assert(0 <= index and index < n);
        return a.substr(index, len);
    }

    bool isPalindrome(int l, int r) {
        int center = (l + r) / 2;
        int odd = !((l + r) & 1);
        return (r - l + 1) <= Longest(center, odd);
    }
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>Manacher</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
