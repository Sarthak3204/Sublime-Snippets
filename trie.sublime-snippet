<snippet>
	<content><![CDATA[
const int ALPHABET_SIZE = 26;

struct node {
    node* next[ALPHABET_SIZE];//array of pointers which stores the address for next node
    bool isEndOfWord;
    node() {
        for (int i = 0; i < ALPHABET_SIZE; i++) {
            next[i] = NULL;
        }
        isEndOfWord = false;
    }
};

void insert(node* root, string &s) {
    node* crawl = root;
    int n = (int)s.size();
    for (int i = 0; i < n; i++) {
        int index = s[i] - 'a';
        if ((*crawl).next[index] == NULL) {
            (*crawl).next[index] = new node();
        }
        crawl = (*crawl).next[index];
    }
    (*crawl).isEndOfWord = true;
}

bool search(node* root, string &s) {
    node* crawl = root;
    int n = (int)s.size();
    for (int i = 0; i < n; i++) {
        int index = s[i] - 'a';
        if ((*crawl).next[index] == NULL) {
            return false;
        }
        crawl = (*crawl).next[index];
    }
    return (*crawl).isEndOfWord;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>trie</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
