<snippet>
    <content><![CDATA[
vector<int> monotonic_stack(const vector<int> &a, function<bool(int, int)> f, int one = 0, int fwd = 1) {
    int N = (int)a.size() - one;

    vector<int> ind(N + one, (fwd > 0 ? N + one : -1 + one));
    stack<int> s;

    for (int i = (fwd > 0 ? 0 : N - 1) + one; (fwd > 0 ? i < N + one : i >= one); (fwd > 0 ? i++ : i--)) {
        while (!s.empty() and f(a[i], a[s.top()]))
            ind[s.top()] = i, s.pop();
        s.push(i);
    }

    return ind;
}
/*
vector<int> NGE_R = monotonic_stack(a, [&](const int x, const int y) -> bool { return x > y; }, 0);
vector<int> NGE_L = monotonic_stack(a, [&](const int x, const int y) -> bool { return x > y; }, 0, -1);
vector<int> NSE_R = monotonic_stack(a, [&](const int x, const int y) -> bool { return x < y; }, 0);
vector<int> NSE_L = monotonic_stack(a, [&](const int x, const int y) -> bool { return x < y; }, 0, -1);
*/
]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>monotonic_stack</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <!-- <scope>source.python</scope> -->
</snippet>
