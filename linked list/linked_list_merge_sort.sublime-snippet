<snippet>
	<content><![CDATA[
ListNode* sortList(ListNode* head) {
    if (head == NULL) return NULL;

    ListNode* temp = head;
    vector<ListNode*> a;

    int n = 0;
    while (temp) {
        n++;
        a.push_back(temp);
        temp = temp->next;
    }

    auto merge = [&] (int lo, int mid, int hi) {
        vector<ListNode*> b;

        int i = lo, j = mid + 1;
        while (i <= mid and j <= hi) {
            if (a[i]->val <= a[j]->val) b.push_back(a[i++]);
            else b.push_back(a[j++]);
        }

        while (i <= mid) b.push_back(a[i++]);
        while (j <= hi) b.push_back(a[j++]);

        assert(b.size() == hi - lo + 1);
        for (int k = lo; k <= hi; k++) {
            a[k] = b[k - lo];
        }
    };

    function<void(int, int)> mergeSort = [&] (int lo, int hi) {
        if (lo >= hi) return;
        int mid = (lo + hi) / 2;

        mergeSort(lo, mid);
        mergeSort(mid + 1, hi);

        merge(lo, mid, hi);
    };

    mergeSort(0, n - 1);
    for (int i = 0; i < n; i++) {
        a[i]->next = (i < n - 1 ? a[i + 1] : NULL);
    }

    return a[0];
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>linked_list_merge_sort</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
